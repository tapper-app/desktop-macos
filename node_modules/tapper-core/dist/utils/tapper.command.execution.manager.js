import { exec } from 'child_process';
export class TapperCommandExecutionManager {
    // @ts-ignore
    static onExecuteCommandString(command) {
        exec(command, (error, stdout, stderr) => {
            if (error) {
                console.log("Error While Executing the Command ... " + error.message);
                return;
            }
            console.log(stdout);
        });
    }
    static getRandomCoordinates(screenWidth, screenHeight) {
        const minX = 0;
        const maxX = screenWidth;
        const minY = 0;
        const maxY = screenHeight;
        const randomX = Math.floor(Math.random() * (maxX - minX + 1)) + minX;
        const randomY = Math.floor(Math.random() * (maxY - minY + 1)) + minY;
        return { x: randomX, y: randomY };
    }
    static sleep(ms) {
        return new Promise(resolve => setTimeout(resolve, ms));
    }
    static onExecuteCommandStringWithoutInput(command) {
        exec(command, (error, stdout, stderr) => {
            if (error) {
                console.log("Error While Executing the Command ... " + error.message);
                return;
            }
        });
    }
}
